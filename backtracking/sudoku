//my version...errors

#include<iostream>
using namespace std;

bool allplaced(int board[][9],int n){
    for(int k=0; k<n; k++){
        for(int l=0; l<n;l++){
            if(board[k][l]==0){
                return false;
            }
        }
    }
    return true;
}

bool checkcorrect(int board[][9],int n,int i,int j){
    int val=board[i][j];
    for(int k=0; k<9; k++){
        if (k!=i && board[k][j]==val){
            return false;
        }
    }
    for(int k=0; k<9; k++){
        if (k!=j && board[i][k]==val){
            return false;
        }
    }
    int x=i/3;
    int y=j/3;
    for(int k=x; k<x+3; k++){
        for(int l=y; l<y+3;l++){
            if(k!=i && l!=j && board[k][l]==val){
                return false;
            }
        }
    }
    return true;
}


void sudoku(int board[][9],int n,int i,int j){
    cout<<i<<" "<<j<<" "<<board[i][j-1]<<endl;
    if (allplaced(board,n)){
        for(int k=0; k<n; k++){
            for(int l=0; l<n;l++){
                cout<<board[k][l]<<" ";
            }
            cout<<endl;
        }
        return ;
    }
    int bl=board[i][j];
    if (bl!=0){
        if(j==8){
            sudoku(board,n,i+1,0);
        }else{
            sudoku(board,n,i,j+1);
        }
    }else{
        for(int k=1; k<=9; k++){
            board[i][j]=k;
            bool pos=checkcorrect(board,n,i,j);
            if(pos){
                if(j==8){
                    sudoku(board,n,i+1,0);
                }else{
                    sudoku(board,n,i,j+1);
                }
            }
            board[i][j]=0;
        }
    }
    return ;
}

int main() {
    int n; 
    cin>>n;
    int board[n][9]={0};
    for(int k=0; k<n; k++){
        for(int l=0; l<n;l++){
            cin>>board[k][l];
        }
    }
    sudoku(board,n,0,0);
	return 0;
}
